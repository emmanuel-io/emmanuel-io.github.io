<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on emmanuel io</title>
    <link>https://emmanuel-io.github.io/fr/posts/</link>
    <description>Recent content in Posts on emmanuel io</description>
    <generator>Hugo -- 0.147.0</generator>
    <language>fr-FR</language>
    <lastBuildDate>Thu, 01 May 2025 23:00:00 +0400</lastBuildDate>
    <atom:link href="https://emmanuel-io.github.io/fr/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Comment j&#39;ai migr√© un site WordPress vers un nouveau plan d&#39;h√©bergement et √©vit√© un prix de renouvellement √©lev√©</title>
      <link>https://emmanuel-io.github.io/fr/posts/wordpress-site-migration-hostinger-renewal-cost/</link>
      <pubDate>Thu, 01 May 2025 23:00:00 +0400</pubDate>
      <guid>https://emmanuel-io.github.io/fr/posts/wordpress-site-migration-hostinger-renewal-cost/</guid>
      <description>D√©couvrez comment migrer un site WordPress entre des plans d&amp;#39;h√©bergement, √©viter des frais de renouvellement √©lev√©s et r√©soudre des probl√®mes comme les pr√©fixes dans .htaccess causant des erreurs 500.</description>
      <content:encoded><![CDATA[<h2 id="contexte--la-d√©cision-de-migration">Contexte : La d√©cision de migration</h2>
<p>Face au co√ªt √©lev√© du renouvellement d&rsquo;un plan d&rsquo;h√©bergement, j&rsquo;ai d√ª faire un choix : soit payer pour une nouvelle ann√©e, soit d√©placer le site vers un plan plus abordable. Comme le site est plus un outil de <strong>branding</strong> pour son auteur qu&rsquo;une machine g√©n√©rant des revenus, l&rsquo;option la plus <strong>√©conomique</strong> s&rsquo;est impos√©e. Apr√®s tout, il ne s&rsquo;agissait pas de rentabilit√© ‚Äî mais de maintenir le site sans le fardeau des frais de renouvellement √©lev√©s.</p>
<p>√âtant impliqu√© dans ce projet <strong>pro bono</strong>, je cherchais des moyens de maintenir les co√ªts bas jusqu&rsquo;√† ce que l&rsquo;objectif ultime soit r√©alis√© : <strong>migrer tout vers Hugo</strong>. Cela demandera une <strong>planification minutieuse</strong> √©tant donn√© qu&rsquo;il y a plus de <strong>3 000 articles</strong> √† prendre en compte. Mais pour l&rsquo;instant, la priorit√© √©tait d&rsquo;√©viter de payer un prix √©lev√© de renouvellement tout en gardant le contr√¥le du site.</p>
<p>J&rsquo;ai donc opt√© pour <strong>migrer le site WordPress</strong> vers un plan d&rsquo;h√©bergement plus abordable. Ce n&rsquo;√©tait pas aussi simple que je l&rsquo;avais imagin√©, mais l&rsquo;objectif √©tait clair : d√©placer le site, <strong>√©conomiser sur les frais de renouvellement</strong>, et esp√©rer apprendre quelque chose en cours de route. üöÄ</p>
<hr>
<h2 id="√©tape-1--sauvegarde-la-m√©thode-facile">√âtape 1 : Sauvegarde, la m√©thode facile</h2>
<p>La premi√®re √©tape de la migration a √©t√© de sauvegarder l&rsquo;ensemble du site WordPress ‚Äî y compris les <strong>fichiers</strong> et la <strong>base de donn√©es</strong>. Pour cela, j&rsquo;ai profit√© des <strong>m√©thodes faciles</strong> propos√©es par Hostinger, qui offraient un moyen simple de cr√©er un fichier tar.gz pour l&rsquo;ensemble du site et une sauvegarde de la base de donn√©es via leur interface hPanel. Ces √©tapes √©taient simples et m&rsquo;ont fait gagner beaucoup de temps pour mettre en place les sauvegardes, le temps de me pr√©parer un caf√© ‚òï.</p>
<h2 id="√©tape-2--d√©fis-li√©s-au-t√©l√©chargement">√âtape 2 : D√©fis li√©s au t√©l√©chargement</h2>
<p>Le v√©ritable d√©fi est survenu lorsque j&rsquo;ai essay√© de t√©l√©charger le tarball que je venais de t√©l√©charger. Le fichier de <strong>30 Go</strong> √©tait bien trop volumineux pour √™tre t√©l√©charg√© en une seule fois via le client web : avec un temps estim√© de transfert de 8 heures ‚Äî une dur√©e beaucoup trop longue ‚Äî c&rsquo;√©tait tout simplement trop lent et, franchement, risqu√© de se fier √† cette m√©thode.<br>
Surtout avec une connexion √† <strong>1 Mo/s</strong>, probablement limit√©e par l&rsquo;interface web. üò§</p>
<p>C&rsquo;est √† ce moment que j&rsquo;ai v√©rifi√© si l&rsquo;acc√®s <strong>SFTP</strong> et <strong>SSH</strong> √©taient disponibles sur mon plan. Cela a √©t√© un v√©ritable <strong>tournant</strong> : cela m&rsquo;a donn√© beaucoup plus de contr√¥le sur le processus de transfert. Et j&rsquo;ai pu t√©l√©charger les fichiers √† <strong>deux fois la vitesse</strong> du client web. ‚ö°</p>
<p>Avec l&rsquo;acc√®s SSH en main, je me suis assur√© que les commandes <code>cat</code> et <code>tar</code> √©taient disponibles sur le serveur (on n&rsquo;est jamais trop s√ªr). Puis apr√®s avoir d√©coup√© mon archive en plusieurs fichiers, j&rsquo;ai pu t√©l√©charger les parties via SFTP et, une fois toutes les parties sur le serveur, j&rsquo;ai r√©assembl√© les fichiers dans le fichier tar.gz d&rsquo;origine avant de les extraire. Cette m√©thode a fourni plus de stabilit√© et de vitesse que de se fier √† l&rsquo;interface web.</p>
<p>R√©sum√© des √©tapes pour le t√©l√©chargement des fichiers :</p>
<ol>
<li>D√©couper l&rsquo;archive localement.</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">split -b 1G large_backup.tar.gz large_backup_part_
</span></span></code></pre></div><ol start="2">
<li>
<p>T√©l√©charger les parties vers le nouvel h√©bergement en utilisant SFTP.</p>
</li>
<li>
<p><strong>SSH</strong> sur le nouveau serveur.</p>
</li>
<li>
<p>R√©assembler les parties.</p>
</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">cat large_backup_part_* &gt; large_backup.tar.gz
</span></span></code></pre></div><ol start="5">
<li>Extraire les fichiers.</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">tar -xzvf large_backup.tar.gz -C public_html
</span></span></code></pre></div><ol start="6">
<li>Enfin, d√©placer les fichiers extraits l√† o√π c&rsquo;est n√©cessaire.</li>
</ol>
<p><strong>Remarque</strong> : √Ä ce moment-l√†, je commen√ßais √† douter de ma d√©cision. Le temps que je passais ici aurait s√ªrement pu √™tre utilis√© ailleurs, peut-√™tre en payant le renouvellement et en gardant les choses simples. ü§î</p>
<h2 id="√©tape-3--la-migration-ou-comment-jai-tout-cass√©">√âtape 3 : La migration ou comment j&rsquo;ai tout cass√©</h2>
<p>Une fois les fichiers t√©l√©charg√©s sur le nouveau plan, l&rsquo;√©tape suivante √©tait la migration de la base de donn√©es. L&rsquo;importation de la base de donn√©es via <strong>phpMyAdmin</strong> s&rsquo;est tr√®s bien pass√©e, j&rsquo;ai simplement supprim√© toutes les tables existantes avant l&rsquo;importation, et voil√†. ‚úîÔ∏è</p>
<p>Passons maintenant √† la configuration de WordPress pour utiliser cette base en √©ditant <code>wp-config.php</code>.</p>
<ol>
<li>J&rsquo;ai mis √† jour les d√©tails de la base de donn√©es dans <code>wp-config.php</code> :</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">define</span><span class="p">(</span><span class="s1">&#39;DB_NAME&#39;</span><span class="p">,</span> <span class="s1">&#39;new_database_name&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">define</span><span class="p">(</span><span class="s1">&#39;DB_USER&#39;</span><span class="p">,</span> <span class="s1">&#39;new_database_user&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">define</span><span class="p">(</span><span class="s1">&#39;DB_PASSWORD&#39;</span><span class="p">,</span> <span class="s1">&#39;new_database_password&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">define</span><span class="p">(</span><span class="s1">&#39;DB_HOST&#39;</span><span class="p">,</span> <span class="s1">&#39;new_database_host&#39;</span><span class="p">);</span>
</span></span></code></pre></div><ol start="2">
<li>Mettre √† jour les URL du site dans la table <code>wp_options</code> de la base de donn√©es pour pointer vers le nouveau domaine :</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">UPDATE</span><span class="w"> </span><span class="n">wp_options</span><span class="w"> </span><span class="k">SET</span><span class="w"> </span><span class="n">option_value</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">&#39;http://yournewdomain.com&#39;</span><span class="w"> </span><span class="k">WHERE</span><span class="w"> </span><span class="n">option_name</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">&#39;siteurl&#39;</span><span class="w"> </span><span class="k">OR</span><span class="w"> </span><span class="n">option_name</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">&#39;home&#39;</span><span class="p">;</span><span class="w">
</span></span></span></code></pre></div><h2 id="√©tape-4--le-probl√®me-htaccess---une-le√ßon-de-d√©pannage">√âtape 4 : Le probl√®me <code>.htaccess</code> - Une le√ßon de d√©pannage</h2>
<p>Tout allait bien jusqu&rsquo;ici. Mais lorsque j&rsquo;ai test√© le site, j&rsquo;ai rencontr√© un probl√®me.</p>
<p>C&rsquo;est l√† que les choses sont devenues int√©ressantes. Apr√®s avoir migr√© le site et effectu√© les tests, je me suis retrouv√© face √† une erreur <strong>500 serveur interne</strong>.<br>
Il s&rsquo;av√®re que mon fid√®le fichier <code>.htaccess</code> avait des r√®gles de <strong>pr√©fixage</strong>; merci au plugin <strong>Wordfence</strong> qui causait des conflits avec les redirections de WordPress.</p>
<p>Le plugin pr√©fixait le mauvais chemin, ce qui a conduit √† des redirections cass√©es. Un peu de fouille dans le fichier <code>.htaccess</code> a r√©v√©l√© le probl√®me.</p>
<p>Voici une version anonymis√©e de la section probl√©matique :</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-apache" data-lang="apache"><span class="line"><span class="cl"><span class="c"># Wordfence WAF</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;IfModule</span> <span class="s">LiteSpeed</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nb">php_value</span> auto_prepend_file &#39;/home/user-identifier/domains/politicothon.com/public_html/wordfence-waf.php&#39;
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/IfModule&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;IfModule</span> <span class="s">lsapi_module</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nb">php_value</span> auto_prepend_file &#39;/home/user-identifier/domains/politicothon.com/public_html/wordfence-waf.php&#39;
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/IfModule&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># FIN Wordfence WAF</span>
</span></span></code></pre></div><p><strong>La solution</strong> : J&rsquo;ai simplement comment√© les lignes d√©fectueuses, en m&rsquo;assurant que les redirections fonctionnaient correctement, puis j&rsquo;ai r√©initialis√© les modifications de <code>.htaccess</code> depuis le plugin. √áa a finalement fonctionn√©. üéâ</p>
<h2 id="√©tape-5--d√©placement-des-emails-et-autres-t√¢ches-impr√©vues">√âtape 5 : D√©placement des emails et autres t√¢ches impr√©vues</h2>
<p>Bien s√ªr, aucune migration n&rsquo;est compl√®te sans le d√©placement des emails. Heureusement, Hostinger a facilit√© ce processus.</p>
<h2 id="tests-finaux-et-ajustements">Tests finaux et ajustements</h2>
<p>Une fois que tout a √©t√© t√©l√©charg√©, configur√©, et que la plupart des probl√®mes ont √©t√© r√©solus, j&rsquo;ai effectu√© quelques v√©rifications finales :</p>
<ol>
<li><strong>Vider les permaliens</strong> dans WordPress : Cela a permis d&rsquo;assurer l&rsquo;absence de liens cass√©s.</li>
<li><strong>Tester le site</strong> : J&rsquo;ai visit√© manuellement le site pour v√©rifier que toutes les pages, publications et m√©dias √©taient intacts.</li>
<li><strong>V√©rifier les emails</strong> : J&rsquo;ai envoy√© et re√ßu quelques emails de test pour confirmer la r√©ussite de la migration. ‚úÖ</li>
</ol>
<hr>
<p>Conclusion : Le temps pass√© en valait-il la peine ?
En repensant √† la migration, c&rsquo;√©tait une exp√©rience d&rsquo;apprentissage. Bien s√ªr, j&rsquo;ai √©conomis√© sur le co√ªt du renouvellement, mais le temps pass√© √† r√©soudre des probl√®mes, d√©placer des fichiers, g√©rer les soucis de .htaccess et transf√©rer les emails m&rsquo;a probablement co√ªt√© plus en temps que simplement renouveler le plan.</p>
<p>Mais au final, j&rsquo;ai acquis une compr√©hension pr√©cieuse des configurations WordPress, du d√©pannage c√¥t√© serveur et de la gestion d&rsquo;h√©bergement. C&rsquo;est une le√ßon qui m&rsquo;aidera assur√©ment lors de futures migrations ‚Äî bien que la prochaine fois, je pourrais simplement payer le renouvellement et √©viter les tracas. Apr√®s tout, <strong>Le temps c&rsquo;est de l&rsquo;argent.</strong></p>
<p>√Ä venir : Migrer un site WordPress vers Hugo
Si la migration de WordPress √† WordPress a √©t√© correcte, la prochaine fois, je vais relever le d√©fi de passer de WordPress √† Hugo. Ce sera s√ªrement une aventure bien plus complexe ‚Äî et cette fois, je pourrais m√™me gagner plus de temps (ou d√©penser moins dans le processus !).</p>
<hr>
<p><strong>Le√ßon apprise</strong> : Parfois, la <strong>commodit√© de ne pas bouger</strong> se paye par le <strong>temps pass√©</strong> dans le processus. üòú</p>
]]></content:encoded>
    </item>
    <item>
      <title>Pourquoi j‚Äôai choisi Hugo : performance, simplicit√© et valeur durable</title>
      <link>https://emmanuel-io.github.io/fr/posts/why-choose-hugo/</link>
      <pubDate>Fri, 11 Apr 2025 08:00:00 +0400</pubDate>
      <guid>https://emmanuel-io.github.io/fr/posts/why-choose-hugo/</guid>
      <description>D√©couvrez pourquoi Hugo est le g√©n√©rateur de site statique id√©al pour les d√©veloppeurs qui recherchent vitesse, contr√¥le et faible maintenance. Une r√©flexion personnelle d‚Äôun ing√©nieur logiciel.</description>
      <content:encoded><![CDATA[<p>En tant que d√©veloppeur backend soucieux d‚Äôoptimisation et de valeur √† long terme, je cherche des outils rapides, sobres et fiables. Pour cr√©er mon blog et portfolio, je voulais une solution qui colle √† ma mani√®re de penser et de travailler‚ÄØ: conviviale pour les d√©veloppeurs, simple √† maintenir, et p√©renne.</p>
<p>Apr√®s avoir compar√© les options, j‚Äôai choisi <a href="https://gohugo.io/">Hugo</a> ‚Äî un g√©n√©rateur de site statique open-source ‚Äî et je ne le regrette pas.</p>
<h2 id="pourquoi-pas-un-cms-classique-">Pourquoi pas un CMS classique ?</h2>
<p>Des plateformes comme WordPress, Ghost, Medium ou Wix offrent une interface pratique et des th√®mes tout pr√™ts. Mais elles ont un co√ªt‚ÄØ:</p>
<ul>
<li>H√©bergement payant et d√©pendance √† des plugins</li>
<li>Mises √† jour de s√©curit√© r√©guli√®res</li>
<li>Temps de chargement souvent lents sans cache</li>
<li>Base de donn√©es √† maintenir</li>
<li>Interface d‚Äôadministration obligatoire</li>
</ul>
<p>Je ne voulais rien de tout √ßa.</p>
<h2 id="ce-que-je-recherchais-vraiment">Ce que je recherchais vraiment</h2>
<p>Je voulais un blog :</p>
<ul>
<li>üöÄ <strong>Rapide</strong> ‚Äî des pages qui se chargent en moins de 100‚ÄØms</li>
<li>üí∏ <strong>Presque gratuit √† h√©berger</strong> ‚Äî contenu statique sur GitHub Pages</li>
<li>üõ† <strong>Facile √† maintenir</strong> ‚Äî pas de base de donn√©es, pas de mises √† jour critiques</li>
<li>üìÅ <strong>Bas√© sur Markdown</strong> ‚Äî contenu portable, √©ditable hors ligne, versionn√©</li>
<li>üåç <strong>Multilingue</strong> ‚Äî parce que j‚Äô√©cris en fran√ßais et en anglais</li>
<li>üß© <strong>Personnalisable</strong> ‚Äî contr√¥le total sur la structure, les th√®mes, et le rendu</li>
</ul>
<p>Hugo coche toutes ces cases.</p>
<h2 id="pourquoi-hugo-sort-du-lot">Pourquoi Hugo sort du lot</h2>
<p>Contrairement √† d&rsquo;autres g√©n√©rateurs de sites statiques, Hugo est pens√© pour la performance et la clart√© :</p>
<ul>
<li>‚ö° <strong>Ultra rapide</strong> ‚Äî des milliers de pages g√©n√©r√©es en quelques millisecondes</li>
<li>üí° √âcrit en <strong>Go</strong>, un langage rapide, s√ªr et moderne</li>
<li>üß± <strong>Structure modulaire</strong> ‚Äî permet de faire √©voluer le site progressivement</li>
<li>üåê <strong>Support natif du multilingue</strong> ‚Äî pas besoin de plugins</li>
<li>‚úÖ <strong>Parfaitement compatible avec GitHub Pages</strong> ‚Äî avec CI/CD via GitHub Actions</li>
</ul>
<h2 id="il-correspond-√†-ma-fa√ßon-de-d√©velopper">Il correspond √† ma fa√ßon de d√©velopper</h2>
<p>Mon blog est structur√© comme un projet logiciel :</p>
<ul>
<li>J‚Äô√©cris en Markdown</li>
<li>Je versionne avec Git</li>
<li>Je pr√©visualise localement</li>
<li>Je d√©ploie automatiquement avec GitHub Actions</li>
<li>Mon contenu vit dans mon d√©p√¥t, pas dans une base tierce</li>
<li>Le site reste rapide sans JavaScript inutile</li>
</ul>
<p>Hugo respecte mon temps ‚Äî pas de plugins capricieux, pas de mises √† jour risqu√©es, pas de serveur √† surveiller.</p>
<h2 id="une-vraie-valeur-√†-long-terme">Une vraie valeur √† long terme</h2>
<p>Plus je travaille dans la tech, plus j‚Äôappr√©cie les outils simples et durables. Hugo, c‚Äôest :</p>
<ul>
<li>üß© <strong>Portable</strong> ‚Äî Markdown fonctionnera encore dans 10 ans</li>
<li>üí∞ <strong>√âconomique</strong> ‚Äî h√©bergement quasi gratuit</li>
<li>üßò <strong>S√©r√©nit√©</strong> ‚Äî surface d‚Äôattaque nulle, rien √† mettre √† jour</li>
<li>üß™ <strong>Plaisir de d√©veloppeur</strong> ‚Äî tout est texte, Git, et logique</li>
</ul>
<p>Je ne cherche pas des buzzwords ‚Äî je cherche des outils qui durent. Hugo est un choix qui fait gagner du temps aujourd‚Äôhui et demain.</p>
<h2 id="en-r√©sum√©">En r√©sum√©</h2>
<p>Hugo n‚Äôest pas qu‚Äôun moteur de blog ‚Äî c‚Äôest une plateforme pour publier efficacement. Que vous soyez d√©veloppeur, auteur ou ind√©pendant, Hugo vous permet de cr√©er un site rapide, simple √† maintenir, et align√© avec vos id√©es ‚Äî pas avec vos factures d‚Äôh√©bergement.</p>
<p>Voil√† pourquoi j‚Äôai choisi Hugo.</p>
<p>üëâ En savoir plus sur <a href="https://gohugo.io/">gohugo.io</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>Configurer Hugo localement avec Git et un th√®me</title>
      <link>https://emmanuel-io.github.io/fr/posts/set-hugo-1/</link>
      <pubDate>Sat, 04 Jun 2022 01:12:42 +0200</pubDate>
      <guid>https://emmanuel-io.github.io/fr/posts/set-hugo-1/</guid>
      <description>Apprenez √† configurer un blog Hugo depuis z√©ro en utilisant Git, les sous-modules et un th√®me de d√©marrage.</description>
      <content:encoded><![CDATA[<p>J&rsquo;avais besoin d&rsquo;un espace pour pr√©senter mon travail, partager des id√©es et √©crire des articles ‚Äî qu&rsquo;il s&rsquo;agisse de tutoriels, de critiques, d&rsquo;√©ditoriaux ou de simples billets de blog. GitHub est id√©al pour h√©berger du code, mais je voulais un espace √† moi sur le web. Ce blog me sert aussi de portfolio num√©rique.</p>
<h2 id="quelles-options-pour-bloguer-">Quelles options pour bloguer ?</h2>
<p>Voici quelques plateformes populaires pour d√©marrer un blog :</p>
<ul>
<li><a href="https://wordpress.com/">WordPress</a></li>
<li><a href="https://medium.com/">Medium</a></li>
<li><a href="https://ghost.org/">Ghost</a></li>
<li><a href="https://www.wix.com/blog">Wix</a></li>
</ul>
<p>Ces plateformes tout-en-un offrent des fonctionnalit√©s int√©ressantes :</p>
<ul>
<li>Mise en page automatis√©e pour se concentrer sur le contenu</li>
<li>SEO int√©gr√©</li>
<li>√âditeur dans le navigateur</li>
<li>Gestion des m√©dias, plugins et th√®mes</li>
<li>H√©bergement, base de donn√©es et mises √† jour g√©r√©s automatiquement</li>
</ul>
<p>Mais je voulais quelque chose de gratuit, minimaliste, et enti√®rement sous mon contr√¥le.</p>
<p>GitHub Pages propose <a href="https://pages.github.com/">un h√©bergement gratuit pour du contenu statique</a> ‚Äî sans backend, sans base de donn√©es ‚Äî juste du HTML, CSS, JS. Cette contrainte m&rsquo;a amen√© √† explorer les <strong>g√©n√©rateurs de sites statiques</strong>.</p>
<blockquote>
<p>üöß <em>Mes raisons de choisir Hugo, et une r√©flexion plus approfondie, seront abord√©es dans un article √† part.</em></p></blockquote>
<hr>
<h2 id="mise-en-place-du-blog">Mise en place du blog</h2>
<p>J‚Äôai suivi ces 5 √©tapes (inspir√©es de <a href="https://bhanuchaddha.github.io/create-your-own-blog-website-using-hugo-in-less-than-1-hour-for-free/">l‚Äôarticle de Bhanu Chaddha</a>) :</p>
<ol>
<li>Installer Hugo</li>
<li>Cr√©er le projet</li>
<li>Initialiser Git</li>
<li>Installer un th√®me via un sous-module</li>
<li>Ajouter du contenu et lancer le site</li>
</ol>
<hr>
<h3 id="1-installer-hugo">1. Installer Hugo</h3>
<p>Sous Ubuntu :</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">sudo snap install hugo --channel<span class="o">=</span>extended
</span></span></code></pre></div><p>V√©rifier l&rsquo;installation :</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">hugo version
</span></span></code></pre></div><p>Exemple de sortie :</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">hugo v0.96.0+extended linux/amd64 BuildDate=2022-03-26T09:15:58Z
</span></span></code></pre></div><hr>
<h3 id="2-cr√©er-un-nouveau-projet-hugo">2. Cr√©er un nouveau projet Hugo</h3>
<p>Se rendre dans le dossier de travail :</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">cd</span> ~/Documents
</span></span><span class="line"><span class="cl">hugo new site emmanuel-io-github-io-hugo
</span></span></code></pre></div><p>Cela cr√©e la structure du projet Hugo.</p>
<hr>
<h3 id="3-initialiser-git">3. Initialiser Git</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">cd</span> emmanuel-io-github-io-hugo
</span></span><span class="line"><span class="cl">git init
</span></span><span class="line"><span class="cl">git branch -m main
</span></span></code></pre></div><hr>
<h3 id="4-installer-un-th√®me-avec-un-sous-module">4. Installer un th√®me avec un sous-module</h3>
<p>J‚Äôai choisi le th√®me <a href="https://themes.gohugo.io/themes/gohugo-theme-ananke/">Ananke</a> et je l‚Äôai ajout√© comme sous-module Git :</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git submodule add https://github.com/theNewDynamic/gohugo-theme-ananke.git themes/ananke
</span></span></code></pre></div><hr>
<h3 id="5-ajouter-la-configuration-dexemple-et-du-contenu">5. Ajouter la configuration d&rsquo;exemple et du contenu</h3>
<p>Pour tester rapidement le site :</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">cp -R ./themes/ananke/exampleSite/<span class="o">{</span>config.toml,content*,static*<span class="o">}</span> ./
</span></span></code></pre></div><p>Puis lancer le serveur local :</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">hugo server
</span></span></code></pre></div><p>Acc√©dez √† <a href="http://localhost:1313">http://localhost:1313</a> pour voir la version de d√©monstration du th√®me.</p>
<hr>
<h3 id="6-personnaliser-le-site">6. Personnaliser le site</h3>
<p>√Ä partir de l√†, j‚Äôai commenc√© √† adapter la configuration √† mes besoins.</p>
<p>üëâ <em>Dans le prochain article, j‚Äôexpliquerai comment j‚Äôai structur√© le site, ajout√© le support multilingue, configur√© GitHub Actions et personnalis√© le th√®me.</em></p>
]]></content:encoded>
    </item>
    <item>
      <title>D√©ployer un site Hugo sur GitHub Pages avec CI/CD</title>
      <link>https://emmanuel-io.github.io/fr/posts/set-hugo-2/</link>
      <pubDate>Sat, 04 Jun 2022 01:12:42 +0200</pubDate>
      <guid>https://emmanuel-io.github.io/fr/posts/set-hugo-2/</guid>
      <description>Configurez GitHub Actions pour automatiser la g√©n√©ration de votre blog Hugo et son d√©ploiement avec une cl√© SSH et une double strat√©gie de d√©p√¥ts.</description>
      <content:encoded><![CDATA[<p>Dans la partie 1, nous avons explor√© comment j&rsquo;ai cr√©√© un site Web en utilisant Hugo, maintenant nous allons cr√©er une action github pour d√©ployer automatiquement le site sur les pages github lorsque nous cr√©ons un commit.</p>
<h3 id="set-up-of-git-repositories"><strong>Set up of Git repositories</strong></h3>
<p>I created 2 GitHub repositories for the project:</p>
<ol>
<li>First Repository for the hugo project <code>emmanuel-io.github.io.hugo</code></li>
<li>Second repository to host my blog as Github User page <code>emmanuel-io.github.io</code></li>
</ol>
<p>You can find on a lot of articles who are using 2 differents branches of the same repository (&ldquo;main&rdquo; for the project, &ldquo;gh_pages&rdquo; for the generated static files), however I prefere to have two distinct repositories, each one dealing with a different concern.</p>
<p>Now go to the root of the project and execute below commands.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># create the .gitignore file</span>
</span></span><span class="line"><span class="cl">touch .gitignore
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># add the public folder to the list of ignored files</span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;public/&#34;</span> &gt;&gt;.gitignore 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># commit any uncommitted changes</span>
</span></span><span class="line"><span class="cl">git commit -a -m <span class="s2">&#34;init&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># set remote origin branch</span>
</span></span><span class="line"><span class="cl">git remote add origin https://github.com/emmanuel-io/emmanuel-io.github.io.hugo.git
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># push changes</span>
</span></span><span class="line"><span class="cl">git push -u origin main
</span></span></code></pre></div><p>I have ignored the <code>public</code> directory as we don&rsquo;t need to handle it in the repository.</p>
<p>Now we need to generate a pair of public/private keys to be able to use github actions from the 1st directory to write in the 2nd repository.
To understand what I did, you can check these links from the <a href="https://github.com/marketplace/actions/github-pages-action">GitHub Action</a> used to deploy my hugo website.</p>
<p>Have a particular look at this part:
<a href="https://github.com/marketplace/actions/github-pages-action#%EF%B8%8F-create-ssh-deploy-key">Create SSH Deploy Key</a></p>
<p>Do as stated but <strong>NOT IN YOUR PROJECT DIRECTORY !!!</strong></p>
<p>Now in the root directory I created a github workflow yaml file to make sure that every time I push to remote, my blog is updated by github. In VSCode I created this file in &ldquo;.github/workflows/deploy.yml&rdquo;</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl"># A workflow run is made up of one or more jobs that can run sequentially or in parallel
</span></span><span class="line"><span class="cl">jobs:
</span></span><span class="line"><span class="cl">  # This workflow contains a single job called &#34;deploy&#34;
</span></span><span class="line"><span class="cl">  deploy:
</span></span><span class="line"><span class="cl">    # The type of runner that the job will run on
</span></span><span class="line"><span class="cl">    runs-on: ubuntu-latest
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    # Steps represent a sequence of tasks that will be executed as part of the job
</span></span><span class="line"><span class="cl">    steps:
</span></span><span class="line"><span class="cl">      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
</span></span><span class="line"><span class="cl">      - uses: actions/checkout@v2
</span></span><span class="line"><span class="cl">        with:
</span></span><span class="line"><span class="cl">          submodules: true
</span></span><span class="line"><span class="cl">          fetch-depth: 0
</span></span><span class="line"><span class="cl">      
</span></span><span class="line"><span class="cl">      # Github Actions fo Hugo
</span></span><span class="line"><span class="cl">      - name: Setup Hugo
</span></span><span class="line"><span class="cl">        uses: peaceiris/actions-hugo@v2
</span></span><span class="line"><span class="cl">        with:
</span></span><span class="line"><span class="cl">          hugo-version: &#34;latest&#34;
</span></span><span class="line"><span class="cl">          extended: true
</span></span><span class="line"><span class="cl">      
</span></span><span class="line"><span class="cl">      # Creates ./public directory
</span></span><span class="line"><span class="cl">      - name: Build
</span></span><span class="line"><span class="cl">        run: hugo --minify
</span></span><span class="line"><span class="cl">      
</span></span><span class="line"><span class="cl">      # Upload/Commit the contents from publish_dir -&gt; external_repository
</span></span><span class="line"><span class="cl">      - name: Deploy
</span></span><span class="line"><span class="cl">        uses: peaceiris/actions-gh-pages@v3
</span></span><span class="line"><span class="cl">        if: ${{ github.ref == &#39;refs/heads/main&#39; }}
</span></span><span class="line"><span class="cl">        with:
</span></span><span class="line"><span class="cl">          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
</span></span><span class="line"><span class="cl">          # github_token: ${{ secrets.GITHUB_TOKEN }}
</span></span><span class="line"><span class="cl">          personal_token: ${{secrets.GH_TOKEN}}
</span></span><span class="line"><span class="cl">          publish_dir: ./public
</span></span><span class="line"><span class="cl">          external_repository: emmanuel-io/emmanuel-io.github.io
</span></span><span class="line"><span class="cl">          publish_branch: main
</span></span><span class="line"><span class="cl">          user_name: emadio
</span></span><span class="line"><span class="cl">          user_email: emmanuel.amadio@mail.com
</span></span></code></pre></div><h3 id="push-your-content"><strong>Push your content</strong></h3>
<p>Now we have set up our repositories and created our static content in <code>public</code> directory . The only step remain is pushing our local content to GitHub. Lets do that now. Run below commands in the terminal</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># commit any uncommitted changes</span>
</span></span><span class="line"><span class="cl">git commit -a -m <span class="s2">&#34;deploy with actions&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># push changes</span>
</span></span><span class="line"><span class="cl">git push -u origin main
</span></span></code></pre></div><p>And thats it.</p>
<p>Now my blog is updated on every push :-)</p>
<p>You can match your content and configuration with below repositories. The only difference is the value of <code>baseurl</code> that is because I have set up this demo website as Project Site and not the User Site.</p>
<ol>
<li><a href="https://github.com/emmanuel-io/emmanuel-io.github.io.hugo">&ldquo;hugo&rdquo; Project Repository</a></li>
<li><a href="https://emmanuel-io.github.io/">Blog Repository</a></li>
</ol>
]]></content:encoded>
    </item>
  </channel>
</rss>
